[tool.poetry] # https://python-poetry.org/docs/pyproject/
name = "packagename"
version = "0.1.0"
description = "Python project boilerplate"
license = "MIT"
authors = ["Guillaume Gautier <guillaume.gga@gmail.com>"]
maintainers = ["Guillaume Gautier <guillaume.gga@gmail.com>"]
readme = "README.md" # path to README file (.md or .rst)
homepage = "https://github.com/guilgautier/packagename" # url
repository = "https://github.com/guilgautier/packagename" # url
documentation = "https://github.com/guilgautier/packagename" # url
keywords = [] # ["optimization", "gradrient descent"] at most 5 keywords
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Mathematics",
] # https://pypi.org/classifiers/

# https://python-poetry.org/docs/pyproject/#packages
packages = []

# https://python-poetry.org/docs/pyproject/#include-and-exclude
include = []
exclude = []

[tool.poetry.dependencies] # https://python-poetry.org/docs/cli/#add
# These packages are mandatory and form the core of this packageâ€™s distribution.
python = ">=3.8,<3.10" # <3.10 required by scipy

# Install latest version of dependency package-name using
# poetry add package-name
# specific the version
numpy = "^1.20.2"
scipy = "^1.6.2"
matplotlib = "^3.4.1"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted into by apps.
# poetry add package-name --optional

# Jupyter notebooks within VSCode
jupyter = { version = "^1.0.0", optional = true }

# Documentation
Sphinx = { version = "^4.0.3", optional = true }
# Sphinx extensions https://www.sphinx-doc.org/en/master/usage/extensions/index.html
# Live reload of the .rst documentation files https://github.com/executablebooks/sphinx-autobuild
# sphinx-autobuild docs docs/_build/html
sphinx-autobuild = { version = "^2021.3.14", optional = true }
# Manage bibliography .bib files
# https://github.com/mcmtroffaes/sphinxcontrib-bibtex
sphinxcontrib-bibtex = { version = "^2.3.0", optional = true }
# Checks syntax of reStructuredText and code blocks nested within it https://github.com/myint/rstcheck
rstcheck = { version = "^3.3.1", optional = true }

[tool.poetry.extras]
# poetry install -E notebook -E docs

# Jupyter notebooks to be edited in VSCode
notebook = ["jupyter"]

# Documentation is generated with Sphinx
# https://www.sphinx-doc.org/en/master/index.html
# - locally poetry run sphinx-autobuild docs docs/_build/html
docs = ["Sphinx", "sphinx-autobuild", "sphinxcontrib-bibtex", "rstcheck"]
# - Read The Docs, see .readthedocs.yaml
# https://template-python-project.readthedocs.io/en/latest/
rtd = ["Sphinx", "sphinxcontrib-bibtex"]

# Development dependencies
# poetry install installs project in editable mode + dev-dependencies
# poetry install --no-dev
[tool.poetry.dev-dependencies]
# poetry add package-name --dev
pytest = "^6.2.3"      # used to run the test suite of the package
pytest-cov = "^2.11.1" # used to generate coverage report to be uploaded on Codecov for example, see --cov and --cov-report in tool.pytest.ini_options

# https://pre-commit.com/
pre-commit = "^2.15.0"
# Python "uncompromising" code formatter https://github.com/psf/black
black = { extras = ["jupyter"], version = "^21.9b0" }
isort = "^5.9.3"
pydocstyle = "^6.1.1"
rstcheck = "^3.3.1"

[build-system]
# poetry build
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# poetry run pytest
minversion = "6.0"
addopts = "-ra -q -vv --cov=packagename --cov-report=xml"
testpaths = ["tests"]

# For other tools to be black compliant
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html
[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = "88"
